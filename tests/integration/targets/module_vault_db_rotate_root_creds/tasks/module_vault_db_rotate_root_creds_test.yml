---
- name: Var block
  vars:
    user_token: "{{ user_token_cmd.result.auth.client_token }}"
  module_defaults:
    vault_ci_read: "{{ vault_plugins_module_defaults_common }}"
    community.hashi_vault.vault_database_rotate_root_credentials: &defaults
      url: "{{ vault_test_server_http }}"
      auth_method: token
      token: "{{ user_token }}"
      token_validate: true
      timeout: 5
  block:
    - name: Login before root credential rotation
      community.postgresql.postgresql_ping:
        db: "{{ vault_postgres_db }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        port: "{{ vault_postgres_port }}"
        login_host: "{{ vault_postgres_host }}"
      register: login_result_before

    - assert:
        that:
          - login_result_before is defined
          - login_result_before.is_available
          - login_result_before.conn_err_msg | length == 0

    - name: Test rotate root credentials
      register: rotate_credentials
      community.hashi_vault.vault_database_rotate_root_credentials:
        engine_mount_point: database
        connection_name: "{{ db_user }}"

    - assert:
        that:
          - rotate_credentials is defined
          - "'data' in rotate_credentials"
          - rotate_credentials["data"]["status"] == 'success'
          - "'changed' in rotate_credentials"
          - rotate_credentials["changed"]

    - community.postgresql.postgresql_ping:
        db: "{{ vault_postgres_db }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        port: "{{ vault_postgres_port }}"
        login_host: "{{ vault_postgres_host }}"
      register: login_result_after

    - assert:
        that:
          - login_result_after is defined
          - not login_result_after.is_available
          - login_result_after.conn_err_msg | length > 0
